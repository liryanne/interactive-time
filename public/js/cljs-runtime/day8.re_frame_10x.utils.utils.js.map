{"version":3,"sources":["day8/re_frame_10x/utils/utils.cljs"],"mappings":"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","names":["day8.re-frame-10x.utils.utils/diff-link","day8.re-frame-10x.utils.utils/last-in-vec","v","cljs.core.nth","cljs.core/count","day8.re-frame-10x.utils.utils/find-all-indexes-in-vec","pred","p1__32376#","p2__32375#","cljs.core.keep_indexed","day8.re-frame-10x.utils.utils/find-index-in-vec","cljs.core/first","day8.re-frame-10x.utils.utils/id-between-xf","beginning","ending","p1__32377#","cljs.core.filter","var_args","G__32379","day8.re-frame-10x.utils.utils/spy","js/Error","x","js/console.log","label","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","day8.re-frame-10x.utils.utils/pluralize","p__32383","vec__32384","seq32380","G__32381","cljs.core/next","G__32382","self__4723__auto__","num","singular","plural","cljs.core._EQ_","or__4126__auto__","day8.re-frame-10x.utils.utils/pluralize-","p__32394","vec__32395","seq32389","G__32390","G__32391","day8.re-frame-10x.utils.utils/copy-to-clipboard","text","el","js/document"],"sourcesContent":["(ns day8.re-frame-10x.utils.utils)\n\n(def diff-link \"https://github.com/Day8/re-frame-10x/blob/master/docs/HyperlinkedInformation/Diffs.md\")\n\n(defn last-in-vec\n  \"Get the last element in the vector\"\n  [v]\n  (nth v (dec (count v))))\n\n(defn find-all-indexes-in-vec\n  \"Gets the index of all items in vec that match the predicate\"\n  [pred v]\n  (keep-indexed #(when (pred %2) %1) v))\n\n(defn find-index-in-vec\n  \"Gets the index of the first item in vec that matches the predicate\"\n  [pred v]\n  (first (find-all-indexes-in-vec pred v)))\n\n(defn id-between-xf\n  \"Returns a transducer that filters for :id between beginning and ending.\"\n  [beginning ending]\n  (filter #(<= beginning (:id %) ending)))\n\n(defn spy\n  ([x]\n   (js/console.log x)\n   x)\n  ([label x]\n   (js/console.log label x)\n   x))\n\n(defn pluralize\n  \"Return a pluralized phrase, appending an s to the singular form if no plural is provided.\n  For example:\n     (pluralize 5 \\\"month\\\") => \\\"5 months\\\"\n     (pluralize 1 \\\"month\\\") => \\\"1 month\\\"\n     (pluralize 1 \\\"radius\\\" \\\"radii\\\") => \\\"1 radius\\\"\n     (pluralize 9 \\\"radius\\\" \\\"radii\\\") => \\\"9 radii\\\"\n     From https://github.com/flatland/useful/blob/194950/src/flatland/useful/string.clj#L25-L33\"\n  [num singular & [plural]]\n  (str num \" \" (if (= 1 num) singular (or plural (str singular \"s\")))))\n\n(defn pluralize-\n  \"Same as pluralize, but doesn't prepend the number to the pluralized string.\"\n  [num singular & [plural]]\n  (if (= 1 num)\n    singular\n    (or plural (str singular \"s\"))))\n\n(defn copy-to-clipboard\n  [text]\n  (let [el (.createElement js/document \"textarea\")]\n    (set! (.-value el) text)\n    (set! (-> el .-style .-position) \"absolute\")\n    (set! (-> el .-style .-left) \"-9999px\")\n    (.appendChild (.-body js/document) el)\n    (.select el)\n    (.execCommand js/document \"copy\")\n    (.removeChild (.-body js/document) el)))\n"]}