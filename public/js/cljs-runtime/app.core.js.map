{"version":3,"sources":["app/core.cljs"],"mappings":";AAIA,AAAA,AAAMA;AAAN,AAEE,AAAMC,AAAI,AAAAC;AAAV,AACE,AAAAC,AAAA,AAAA,AAAqBF;AAArB,AAAA,AAAAE,AAAAA,AAACC,AAAAA,AAAAA;;AAEL,AAAA,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AAAS,AAAA,AAACC,AAAeT;;AAElC,AAAA,AAACU,AAEC,AAAKC,AAAEA;AAAP,AAAA,AAAA,AAAA,AAAA,AACS,AAAAT;;AAGX,AAAA,AAACQ,AACQ,AAAAE,AAAKG;AAAL,AAAA,AAAAF,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASF;AAAT,AAAAG,AAAAD,AAAA,AAAA,AAAWG;AAAX,AACE,AAAA,AAACC,AAAMF,AAASC;;AAE3B,AAAA,AAACN,AAEC,AAAAQ,AAAKH;AAAL,AAAA,AAAAI,AAAAD;AAAA,AAAAJ,AAAAK,AAAA,AAAA,AAASR;AAAT,AAAAG,AAAAK,AAAA,AAAA,AAAWC;AAAX,AACE,AAAA,AAACH,AAAMF,AAAeK;;AAE1B,AAAAC,AAAA;AAAAC,AAEE,AAAKP,AAAGJ;AAAR,AACE,AAAA,AAAOI;;AAHX,AAAA,AAAAM,AAAAC,AAAAD,AAAAC,AAACC,AAAAA,AAAAA;AAKD,AAAAC,AAAA;AAAAC,AAEE,AAAKV,AAAGJ;AAAR,AACE,AAAA,AAAaI;;AAHjB,AAAA,AAAAS,AAAAC,AAAAD,AAAAC,AAACF,AAAAA,AAAAA;AAKD,AAAA,AAAMI;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAD,AAGoB,AAAAE,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;AACb,AAAAC,AAAA,AAAA,AACD,AAAA,AAAAJ,AACA,AAACK,AACD,AAACjB;AAHA,AAAA,AAAAgB,AAAAA,AAACD,AAAAA,AAAAA;AAEF,AACA;;AAEP,AAAA,AAAMI;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAP,AAKoB,AAAAQ,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACL,AAAAA,AAAAA;AALrB,AAAA,AAAAG;AAAA,AAMwB,AAAAG,AAAA,AAAA,AAAiC,AAAA,AAAAH;AAAjC,AAAA,AAAAG,AAAAA,AAAC/B,AAAAA,AAAAA;;;AAEzB,AAAA,AAAMgC;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIIT,AACAM;;AAEJ,AAAA,AAAMI;AAAN,AAEE,AAAA,AAACC,AAAoBF,AACD,AAAA,AAACG;;AAEvB,AAAA,AAAuBC;AAAvB,AAEE,AAACC,AAAAA,AAAAA;;AACD,AAACJ;;AAEH,AAAA,AAAeK;AAAf,AAEE,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;;AACD,AAACP","names":["app.core/dispatch-timer-event","now","js/Date","G__44021","re-frame.core/dispatch","js/app","js/app.core","js/app.core.do-timer","app.core/do-timer","js/setInterval","re_frame.core.reg_event_db","_","p__44025","vec__44026","cljs.core.nth","db","new-time","cljs.core.assoc","p__44034","vec__44039","new-color-value","G__44043","G__44044","re-frame.core/reg-sub","G__44046","G__44047","cljs.core/deref","app.core/clock","G__44050","re-frame.core/subscribe","G__44054","clojure.string.split","p1__44056#","app.core/color-input","G__44058","G__44059","app.core/ui","app.core/render","reagent.dom.render","js/document.getElementById","app.core/start","re-frame.core/clear-subscription-cache!","app.core/init","G__44071","re-frame.core/dispatch-sync"],"sourcesContent":["(ns app.core\r\n  (:require [reagent.core :as r]\r\n            [re-frame.core :as rf]))\r\n\r\n(defn dispatch-timer-event\r\n  []\r\n  (let [now (js/Date.)]\r\n    (rf/dispatch [:timer now])))\r\n\r\n(defonce do-timer (js/setInterval dispatch-timer-event 1000))\r\n\r\n(rf/reg-event-db\r\n  :initialize\r\n  (fn [_ _]\r\n    {:time (js/Date.)\r\n     :time-color \"red\"}))\r\n\r\n(rf/reg-event-db\r\n  :timer (fn [db [_ new-time]]\r\n           (assoc db :time new-time)))\r\n\r\n(rf/reg-event-db\r\n  :time-color-change\r\n  (fn [db [_ new-color-value]]\r\n    (assoc db :time-color new-color-value)))\r\n\r\n(rf/reg-sub\r\n  :time\r\n  (fn [db _]\r\n    (:time db)))\r\n\r\n(rf/reg-sub\r\n  :time-color\r\n  (fn [db _]\r\n    (:time-color db)))\r\n\r\n(defn clock\r\n  []\r\n  [:div.example-clock\r\n   {:style {:color @(rf/subscribe [:time-color])}}\r\n   (-> @(rf/subscribe [:time])\r\n       (str)\r\n       (clojure.string/split \" \")\r\n       (nth 4))])\r\n\r\n(defn color-input\r\n  []\r\n  [:div.color-input\r\n   \"Time color: \"\r\n   [:input {:type \"text\"\r\n            :value @(rf/subscribe [:time-color])\r\n            :on-change #(rf/dispatch [:time-color-change (-> % .-target .-value)])}]])\r\n\r\n(defn ui\r\n  []\r\n  [:div\r\n   [:h1 \"Hello world, it is now\"]\r\n   [clock]\r\n   [color-input]])\r\n\r\n(defn render\r\n  []\r\n  (reagent.dom/render [ui]\r\n                      (js/document.getElementById \"app\")))\r\n\r\n(defn ^:dev/after-load start\r\n  []\r\n  (rf/clear-subscription-cache!)\r\n  (render))\r\n\r\n(defn ^:export init\r\n  []\r\n  (rf/dispatch-sync [:initialize])\r\n  (render))\r\n"]}